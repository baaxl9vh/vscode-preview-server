# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on release created
  push:
    branches: [ main ]
  release:
    types:
    - created

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        # os: [ubuntu-latest]
        include:
        - os: macos-latest
          path: ./.vscode-test
        - os: ubuntu-latest
          path: ./.vscode-test
        - os: windows-latest
          path: .\.vscode-test
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm install
    - run: npm run pretest
    - name: Cache VSCode
      uses: actions/cache@v2
      with:
        path: ${{ matrix.path }}
        key: ${{ runner.os }}-vscode
        restore-keys: |
          ${{ runner.os }}-vscode
    - run: xvfb-run -a npm run test
      if: runner.os == 'Linux'
    - run: npm run test
      if: runner.os != 'Linux'
    - name: Publish
      if: success() && startsWith( github.ref, 'refs/tags/releases/') && matrix.os == 'ubuntu-latest'
      run: npm run deploy
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
